{
  "info": {
    "name": "E-commerce Microservices Test Collection",
    "description": "Complete test collection for E-commerce microservices system with admin account",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "adminToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paymentId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üè• Health Checks",
      "item": [
        {
          "name": "API Gateway Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "All Services Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health/services",
              "host": ["{{baseUrl}}"],
              "path": ["health", "services"]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ User Service",
      "item": [
        {
          "name": "Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('adminToken', response.token);",
                  "    pm.test('Admin login successful', function () {",
                  "        pm.expect(response.user.email).to.eql('admin@gmail.com');",
                  "        pm.expect(response.user.role).to.eql('admin');",
                  "    });",
                  "} else {",
                  "    pm.test('Login failed', function () {",
                  "        pm.expect(pm.response.code).to.be.oneOf([400, 401]);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@gmail.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/signin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "signin"]
            }
          }
        },
        {
          "name": "Create Admin Account (if not exists)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.test('Admin account created', function () {",
                  "        pm.expect(response.user.email).to.eql('admin@gmail.com');",
                  "        pm.expect(response.user.role).to.eql('admin');",
                  "    });",
                  "} else if (pm.response.code === 400) {",
                  "    pm.test('Admin account already exists', function () {",
                  "        pm.expect(pm.response.json().errors[0].message).to.include('Email in use');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@gmail.com\",\n  \"password\": \"admin123\",\n  \"role\": \"admin\",\n  \"firstName\": \"Admin\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "signup"]
            }
          }
        },
        {
          "name": "Create Test User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('userToken', response.token);",
                  "    pm.test('Test user created', function () {",
                  "        pm.expect(response.user.email).to.eql('testuser@gmail.com');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@gmail.com\",\n  \"password\": \"password123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "signup"]
            }
          }
        },
        {
          "name": "Get Current User (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/currentuser",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "currentuser"]
            }
          }
        },
        {
          "name": "Get All Users (Admin Only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        }
      ]
    },
    {
      "name": "üì¶ Product Service",
      "item": [
        {
          "name": "Create Product (Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('productId', response.id);",
                  "    pm.test('Product created successfully', function () {",
                  "        pm.expect(response.title).to.eql('Test Laptop');",
                  "        pm.expect(response.price).to.eql(999);",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Laptop\",\n  \"description\": \"High-performance laptop for testing\",\n  \"price\": 999,\n  \"category\": \"Electronics\",\n  \"brand\": \"TestBrand\",\n  \"stockQuantity\": 50,\n  \"specifications\": {\n    \"processor\": \"Intel i7\",\n    \"ram\": \"16GB\",\n    \"storage\": \"512GB SSD\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            }
          }
        },
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products"]
            }
          }
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Update Product (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Test Laptop\",\n  \"price\": 1099,\n  \"stockQuantity\": 45\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "{{productId}}"]
            }
          }
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/search?q=laptop&category=Electronics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "laptop"
                },
                {
                  "key": "category",
                  "value": "Electronics"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üõí Order Service",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('orderId', response.id);",
                  "    pm.test('Order created successfully', function () {",
                  "        pm.expect(response.status).to.eql('created');",
                  "        pm.expect(response.ticket.id).to.eql(pm.collectionVariables.get('productId'));",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticketId\": \"{{productId}}\",\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Get User Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        },
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/admin/all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "admin", "all"]
            }
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üí≥ Payment Service",
      "item": [
        {
          "name": "Create Payment (COD)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('paymentId', response.id);",
                  "    pm.test('COD Payment created successfully', function () {",
                  "        pm.expect(response.method).to.eql('cod');",
                  "        pm.expect(response.status).to.eql('pending');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"method\": \"cod\",\n  \"amount\": 2198\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments"]
            }
          }
        },
        {
          "name": "Create VNPay Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.test('VNPay payment URL generated', function () {",
                  "        pm.expect(response.paymentUrl).to.include('vnpayment.vn');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"method\": \"vnpay\",\n  \"amount\": 2198\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/vnpay",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "vnpay"]
            }
          }
        },
        {
          "name": "Get Payment by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "{{paymentId}}"]
            }
          }
        },
        {
          "name": "Get User Payments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/payments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments"]
            }
          }
        },
        {
          "name": "Complete COD Payment (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/{{paymentId}}/complete",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "{{paymentId}}", "complete"]
            }
          }
        }
      ]
    },
    {
      "name": "üîÑ Integration Tests",
      "item": [
        {
          "name": "Complete E-commerce Flow",
          "item": [
            {
              "name": "1. Create Product",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Integration Test Phone\",\n  \"description\": \"Smartphone for integration testing\",\n  \"price\": 599,\n  \"category\": \"Electronics\",\n  \"brand\": \"TestBrand\",\n  \"stockQuantity\": 100\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "products"]
                }
              }
            },
            {
              "name": "2. Create Order",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"ticketId\": \"{{productId}}\",\n  \"quantity\": 1\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/orders",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "orders"]
                }
              }
            },
            {
              "name": "3. Process Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{userToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"method\": \"cod\",\n  \"amount\": 599\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "payments"]
                }
              }
            },
            {
              "name": "4. Complete Payment",
              "request": {
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{adminToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"completed\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/payments/{{paymentId}}/complete",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "payments", "{{paymentId}}", "complete"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üö´ Error Handling Tests",
      "item": [
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Invalid Product ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/invalid-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "products", "invalid-id"]
            }
          }
        },
        {
          "name": "Insufficient Stock",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{userToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ticketId\": \"{{productId}}\",\n  \"quantity\": 1000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        }
      ]
    }
  ]
}
